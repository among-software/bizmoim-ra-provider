scalar Filter
scalar KollusVideo
scalar Sort
scalar MId
scalar File
scalar Unknown
scalar Period
scalar PhoneToken
scalar Date
enum ReportTargetKind {
  COURSE_REVIEW
  FREE_BOARD_POST
  FREE_BOARD_COMMENT
  REGULAR_BOARD_POST
  REGULAR_BOARD_COMMENT
  REVIEW_BOARD_POST
  REVIEW_BOARD_COMMENT
  ASSIGNMENT_BOARD_POST
  ASSIGNMENT_BOARD_COMMENT
}
enum TicketStatus {
  PENDING
  VALIDATING
  SUCCEED
  VALIDATION_FAILED
}
enum TicketReasonKind {
  COURSE
  COURSE_PACKAGE
  LECTURE
  SPECIAL_PRODUCT
}
enum TicketMethod {
  VIRTUAL_ACCOUNT
  CARD
}
type LectureApplication {
  _id: MId!
  createdAt: Date!
  lecture: Lecture!
  user: User
  adminChecked: Boolean!
  adminDescription: String!
}
type AssignmentBoardCategoryPage {
  edges: [AssignmentBoardCategoryEdge!]!
  count: Int!
}
type TogetherFreeVideoPage {
  edges: [TogetherFreeVideoEdge!]!
  count: Int!
}
type ReferrerLinkPage {
  edges: [ReferrerLinkEdge!]!
  count: Int!
}
type FreeVideoPage {
  edges: [FreeVideoEdge!]!
  count: Int!
}
type PopupEdge {
  node: Popup!
}
type AssignmentBoardMember {
  _id: MId!
  createdAt: Date!
  user: User!
  board: AssignmentBoard!
}
type SpecialProductEdge {
  node: SpecialProduct!
}
type ReportPage {
  edges: [ReportEdge!]!
  count: Int!
}
type RegularBoardCommentPage {
  edges: [RegularBoardCommentEdge!]!
  count: Int!
}
type AssignmentBoardPostEdge {
  node: AssignmentBoardPost!
}
type TogetherFreeVideoEdge {
  node: TogetherFreeVideo!
}
type SpecialProductPurchase {
  _id: MId!
  createdAt: Date!
  customer: User!
  amountTotal: Int!
  amountPaid: Int!
  adminDescription: String!
}
type Banner {
  _id: MId!
  createdAt: Date!
  name: String!
  imagePc: File!
  imageMobile: File!
  url: String!
  adminDescription: String!
}
type Badge {
  _id: MId!
  createdAt: Date!
  name: String!
  color: String!
  adminDescription: String!
}
type FaqCategoryEdge {
  node: FaqCategory!
}
type ReferrerLinkEdge {
  node: ReferrerLink!
}
type Lesson {
  _id: MId!
  assignmentBoard: AssignmentBoard
  adminDescription: String!
  content: KollusVideo!
  name: String!
  createdAt: Date!
  course: Course!
  assignment: String
  isHidden: Boolean!
}
type AssignmentBoardPage {
  edges: [AssignmentBoardEdge!]!
  count: Int!
}
type Inquiry {
  _id: MId!
  adminDescription: String!
  typeOfBusiness: String!
  phone: String!
  content: String!
  name: String!
  createdAt: Date!
  adminChecked: Boolean!
  careerPeriod: String!
  author: User
  kind: InquiryKind!
  salesMethod: String!
}
type InquiryKindPage {
  edges: [InquiryKindEdge!]!
  count: Int!
}
type SpecialProductPurchaseLink {
  _id: MId!
  createdAt: Date!
  specialProduct: SpecialProduct!
  specialProductPurchase: SpecialProductPurchase!
  ticketCondition: TicketCondition!
  ticket: Ticket
  adminDescription: String!
}
type AdminAuth {
  token: String!
}
type FreeBoardComment {
  _id: MId!
  createdAt: Date!
  author: User!
  post: FreeBoardPost!
  replyOf: FreeBoardComment
  content: String!
  adminDescription: String!
}
type FreeBoardPostEdge {
  node: FreeBoardPost!
}
type InquiryKindEdge {
  node: InquiryKind!
}
type UserTogetherFreeVideoRelPage {
  edges: [UserTogetherFreeVideoRelEdge!]!
  count: Int!
}
type CourseTagRelPage {
  edges: [CourseTagRelEdge!]!
  count: Int!
}
type ReviewBoardPage {
  edges: [ReviewBoardEdge!]!
  count: Int!
}
type AdminSchedulePage {
  edges: [AdminScheduleEdge!]!
  count: Int!
}
type Mutation {
  referrerLinkDelete(_id: MId!): ReferrerLink!
  freeVideoCreate(
    name: String!
    content: File!
    adminDescription: String!
  ): FreeVideo!
  regularBoardUpdate(
    _id: MId!
    category: MId
    name: String
    content: String
    adminDescription: String
    requiredBadges: [MId!]
  ): RegularBoard!
  coachScheduleUpdate(
    _id: MId!
    kind: MId
    customer: MId
    period: Period
    content: String
    adminDescription: String
  ): CoachSchedule!
  courseUpdate(
    description: String
    category: MId
    tags: [MId!]
    _id: MId!
    adminDescription: String
    name: String
    attachments: [File!]
    orientation: File
    brief: String
    image: File
    isHidden: Boolean
    priceSales: Int
    priceRegular: Int
  ): Course!
  meetingRecordDelete(_id: MId!): MeetingRecord!
  reviewBoardCategoryMoveDown(_id: MId!): String
  assignmentBoardMoveDown(_id: MId!, category: MId!): String
  assignmentBoardUpdate(
    _id: MId!
    category: MId
    name: String
    content: String
    adminDescription: String
    lesson: MId
  ): AssignmentBoard!
  badgeDelete(_id: MId!): Badge!
  lessonCreate(
    course: MId!
    name: String!
    content: String!
    assignment: String
    adminDescription: String!
    isHidden: Boolean
  ): Lesson!
  coursePackageCategoryMoveDown(_id: MId!): String
  lectureUpdate(
    description: String
    _id: MId!
    adminDescription: String
    capacity: Int
    name: String
    brief: String
    image: File
    priceSales: Int
    period: Period
    applicationEndsAt: Date
    location: String
    priceRegular: Int
  ): Lecture!
  regularBoardPostUpdate(
    _id: MId!
    board: MId
    author: MId
    name: String
    content: String
    isImportant: Boolean
    adminDescription: String
  ): RegularBoardPost!
  courseReviewUpdateByAdmin(
    _id: MId!
    content: String
    adminChecked: Boolean
    adminDescription: String
  ): CourseReview!
  assignmentBoardPostCreate(
    board: MId!
    author: MId!
    name: String!
    content: String!
    isImportant: Boolean!
    adminDescription: String!
  ): AssignmentBoardPost!
  announcementDelete(_id: MId!): Announcement!
  inquiryKindDelete(_id: MId!): InquiryKind!
  userGroupCreate(name: String!, adminDescription: String!): UserGroup!
  reviewBoardUpdate(
    _id: MId!
    category: MId
    name: String
    content: String
    adminDescription: String
    requiredBadges: [MId!]
  ): ReviewBoard!
  badgeMoveDown(_id: MId!): String
  reportDelete(_id: MId!): Report!
  ticketCreate(user: MId!, condition: TicketConditionInput!): Ticket!
  allocateCoach(user: MId!, coach: MId!): String
  freeBoardCreate(
    category: MId!
    name: String!
    content: String!
    adminDescription: String!
    requiredBadges: [MId!]!
  ): FreeBoard!
  specialProductPurchaseLinkDelete(
    specialProduct: MId!
    specialProductPurchase: MId!
    ticketCondition: TicketConditionInput!
    ticket: MId
    adminDescription: String!
  ): SpecialProductPurchaseLink!
  assignmentBoardMemberDelete(_id: MId!): AssignmentBoardMember!
  specialProductUpdate(
    name: String!
    priceSales: Int!
    adminDescription: String!
  ): SpecialProduct!
  reviewBoardCategoryCreate(
    name: String!
    adminDescription: String!
  ): ReviewBoardCategory!
  coachScheduleCreate(
    kind: MId!
    owner: MId!
    customer: MId
    period: Period!
    content: String!
    adminDescription: String!
  ): CoachSchedule!
  coursePackageCategoryUpdate(
    _id: MId!
    name: String
    adminDescription: String
  ): CoursePackageCategory!
  freeBoardPostDelete(_id: MId!): FreeBoardPost!
  regularBoardCreate(
    category: MId!
    name: String!
    content: String!
    adminDescription: String!
    requiredBadges: [MId!]!
  ): RegularBoard!
  regularBoardMoveUp(_id: MId!, category: MId!): String
  assignmentBoardDelete(_id: MId!): AssignmentBoard!
  deallocateCoach(user: MId!): String
  smsVerifVerify(phone: String!, verifCode: String!): PhoneToken!
  assignmentBoardCategoryDelete(_id: MId!): AssignmentBoardCategory!
  bannerMoveUp(_id: MId!): String
  courseTagCreate(
    kind: String!
    name: String!
    adminDescription: String!
  ): CourseTag!
  userUpdateBySelf(
    id: MId!
    name: String
    nickname: String
    phone: PhoneToken
    email: String
    password: String
  ): User!
  userCreate2(
    adminDescription: String!
    email: String!
    referrerCode: String!
    typeOfBusiness: String!
    group: MId
    phone: String!
    coachExpiresAt: Date!
    name: String!
    nickname: String!
    coach: MId
    studentId: String!
    loginDenied: Boolean!
    togetherFreeVideoTicketCount: Int!
    isCoach: Boolean!
    coachChecked: Boolean!
  ): User!
  reviewBoardCommentDelete(_id: MId!): ReviewBoardComment!
  reviewBoardCommentCreate(
    author: MId!
    post: MId!
    replyOf: MId
    content: String!
    adminDescription: String!
  ): ReviewBoardComment!
  coursePackageCategoryDelete(_id: MId!): CoursePackageCategory!
  announcementCreate(
    name: String!
    content: String!
    adminDescription: String!
  ): Announcement!
  userLogin(phone: String!, password: String!): UserAuth!
  coursePackageCategoryCreate(
    name: String!
    adminDescription: String!
  ): CoursePackageCategory!
  userUpdateByCoachToStudent(
    handledByCoach: Boolean
    email: String
    typeOfBusiness: String
    group: MId
    password: String
    phone: String
    name: String
    studentId: String
    loginDenied: Boolean
    id: MId!
    togetherFreeVideoTicketCount: Int
    coachChecked: Boolean
  ): User!
  userCreateAccount(
    name: String!
    nickname: String!
    phone: PhoneToken!
    email: String!
    password: String!
    referrerCode: String!
    referrerLink: String
  ): UserAuth!
  bannerMoveDown(_id: MId!): String
  inquiryDelete(_id: MId!): Inquiry!
  userBadgeRelCreate(user: MId!, badge: MId!): UserBadgeRel!
  assignmentBoardMemberCreate(user: MId!, board: MId!): AssignmentBoardMember!
  reviewBoardMoveDown(_id: MId!, category: MId!): String
  userUpdateByAdmin(
    adminDescription: String
    handledByCoach: Boolean
    email: String
    typeOfBusiness: String
    group: MId
    password: String
    phone: String
    coachExpiresAt: Date
    name: String
    nickname: String
    studentId: String
    loginDenied: Boolean
    id: MId!
    togetherFreeVideoTicketCount: Int
    isCoach: Boolean
    coachChecked: Boolean
  ): User!
  courseOwnershipPurchase(
    course: MId!
    user: MId!
    ticket: MId!
  ): CourseOwnership!
  specialProductCreate(
    name: String!
    priceSales: Int!
    adminDescription: String!
  ): SpecialProduct!
  courseCategoryDelete(_id: MId!): CourseCategory!
  specialProductPurchaseCreate(
    customer: MId!
    amountTotal: Int!
    amountPaid: Int!
    adminDescription: String!
  ): SpecialProductPurchase!
  freeBoardCommentUpdate(
    _id: MId!
    author: MId
    post: MId
    replyOf: MId
    content: String
    adminDescription: String
  ): FreeBoardComment!
  adminScheduleCreate(
    kind: MId!
    period: Period!
    content: String!
    adminDescription: String!
  ): AdminSchedule!
  lessonMoveDown(_id: MId!): String
  assignmentBoardCategoryCreate(
    name: String!
    adminDescription: String!
  ): AssignmentBoardCategory!
  regularBoardCategoryUpdate(
    _id: MId!
    name: String
    adminDescription: String
  ): RegularBoardCategory!
  popupUpdate(
    _id: MId!
    name: String
    imagePc: File
    imageMobile: File
    url: String
    adminDescription: String
  ): Popup!
  smsVerifSend(phone: String!): String
  freeBoardCommentCreate(
    author: MId!
    post: MId!
    replyOf: MId
    content: String!
    adminDescription: String!
  ): FreeBoardComment!
  lectureApplicationCreate(
    lecture: MId!
    user: MId
    adminDescription: String!
    adminChecked: Boolean!
  ): LectureApplication!
  userBadgeRelDeleteByUserAndBadge(user: MId!, badge: MId!): UserBadgeRel!
  courseOwnershipUpdate(_id: MId!, expiresAt: Date): CourseOwnership!
  specialProductDelete(
    name: String!
    priceSales: Int!
    adminDescription: String!
  ): SpecialProduct!
  lessonUpdate(
    _id: MId!
    name: String
    content: String
    assignment: String
    adminDescription: String
    isHidden: Boolean
  ): Lesson!
  inquiryUpdate(
    _id: MId!
    adminChecked: Boolean
    adminDescription: String
  ): Inquiry!
  bannerDelete(_id: MId!): Banner!
  courseTagMoveUp(_id: MId!): String
  specialProductPurchaseDelete(
    customer: MId!
    amountTotal: Int!
    amountPaid: Int!
    adminDescription: String!
  ): SpecialProductPurchase!
  courseReviewCreate(
    course: MId!
    author: MId!
    content: String!
  ): CourseReview!
  inquiryKindCreate(name: String!, adminDescription: String!): InquiryKind!
  badgeMoveUp(_id: MId!): String
  courseReviewUpdateBySelf(_id: MId!, content: String): CourseReview!
  regularBoardPostDelete(_id: MId!): RegularBoardPost!
  courseTagUpdate(_id: MId!, name: String, adminDescription: String): CourseTag!
  bannerCreate(
    name: String!
    imagePc: File!
    imageMobile: File!
    url: String!
    adminDescription: String!
  ): Banner!
  referrerLinkCreate(
    owner: MId!
    name: String!
    url: String!
    adminDescription: String!
  ): ReferrerLink!
  reportCreate(
    author: MId!
    content: String!
    targetKind: ReportTargetKind!
    target: MId!
  ): Report!
  popupMoveUp(_id: MId!): String
  regularBoardCategoryCreate(
    name: String!
    adminDescription: String!
  ): RegularBoardCategory!
  reviewBoardCommentUpdate(
    _id: MId!
    author: MId
    post: MId
    replyOf: MId
    content: String
    adminDescription: String
  ): ReviewBoardComment!
  reportUpdate(
    _id: MId!
    adminDescription: String
    adminChecked: Boolean
  ): Report!
  specialProductPurchaseUpdate(
    customer: MId!
    amountTotal: Int!
    amountPaid: Int!
    adminDescription: String!
  ): SpecialProductPurchase!
  announcementUpdate(
    _id: MId!
    name: String
    content: String
    adminDescription: String
  ): Announcement!
  sendSmsCoach(targets: [MId!]!): String
  reviewBoardCategoryUpdate(
    _id: MId!
    name: String
    adminDescription: String
  ): ReviewBoardCategory!
  lectureDelete(_id: MId!): Lecture!
  reviewBoardDelete(_id: MId!): ReviewBoard!
  freeBoardPostUpdate(
    _id: MId!
    board: MId
    author: MId
    name: String
    content: String
    isImportant: Boolean
    adminDescription: String
  ): FreeBoardPost!
  reviewBoardMoveUp(_id: MId!, category: MId!): String
  lessonDelete(_id: MId!): Lesson!
  lessonMoveUp(_id: MId!): String
  freeBoardMoveDown(_id: MId!, category: MId!): String
  assignmentBoardMoveUp(_id: MId!, category: MId!): String
  userLessonRelUpdate(
    user: MId!
    lesson: MId!
    lastWatchedAt: Date
    progress: Float
  ): UserLessonRel!
  coursePackageDelete(_id: MId!): CoursePackage!
  freeBoardCategoryMoveDown(_id: MId!): String
  bannerUpdate(
    _id: MId!
    name: String
    imagePc: File
    imageMobile: File
    url: String
    adminDescription: String
  ): Banner!
  reviewBoardCategoryMoveUp(_id: MId!): String
  freeBoardCategoryMoveUp(_id: MId!): String
  courseReviewDeleteByAdmin(_id: MId!): CourseReview!
  reviewBoardCategoryDelete(_id: MId!): ReviewBoardCategory!
  courseTagRelCreate(course: MId!, tag: MId!): CourseTagRel!
  inquiryCreate(
    author: MId
    kind: MId!
    name: String!
    phone: String!
    content: String!
    typeOfBusiness: String!
    careerPeriod: String!
    salesMethod: String!
  ): Inquiry!
  coursePackageCategoryMoveUp(_id: MId!): String
  courseCategoryCreate(
    kind: String!
    name: String!
    adminDescription: String!
  ): CourseCategory!
  reviewBoardCreate(
    category: MId!
    name: String!
    content: String!
    adminDescription: String!
    requiredBadges: [MId!]!
  ): ReviewBoard!
  reviewBoardPostCreate(
    board: MId!
    author: MId!
    name: String!
    content: String!
    isImportant: Boolean!
    adminDescription: String!
  ): ReviewBoardPost!
  assignmentBoardCategoryMoveUp(_id: MId!): String
  courseCategoryMoveUp(_id: MId!): String
  specialProductPurchaseLinkUpdate(
    specialProduct: MId!
    specialProductPurchase: MId!
    ticketCondition: TicketConditionInput!
    ticket: MId
    adminDescription: String!
  ): SpecialProductPurchaseLink!
  sendSmsAdmin(targets: [MId!]!): String
  userVerifyToken(token: String!): UserAuth!
  lectureApplicationUpdate(
    _id: MId!
    adminDescription: String!
    adminChecked: Boolean!
  ): LectureApplication!
  courseTagMoveDown(_id: MId!): String
  meetingRecordUpdate(
    _id: MId!
    customer: MId
    startsAt: String
    content: String
    adminDescription: String
  ): MeetingRecord!
  regularBoardCategoryMoveUp(_id: MId!): String
  freeBoardCategoryCreate(
    name: String!
    adminDescription: String!
  ): FreeBoardCategory!
  assignmentBoardCategoryMoveDown(_id: MId!): String
  regularBoardCommentDelete(_id: MId!): RegularBoardComment!
  courseCreate(
    description: String!
    category: MId!
    tags: [MId!]
    adminDescription: String!
    name: String!
    attachments: [File!]!
    orientation: File
    brief: String!
    image: File!
    isHidden: Boolean
    priceSales: Int!
    priceRegular: Int!
  ): Course!
  freeBoardCategoryDelete(_id: MId!): FreeBoardCategory!
  regularBoardCategoryMoveDown(_id: MId!): String
  assignmentBoardPostDelete(_id: MId!): AssignmentBoardPost!
  popupDelete(_id: MId!): Popup!
  userCreate(
    adminDescription: String!
    email: String!
    typeOfBusiness: String!
    group: MId
    phone: String!
    coachExpiresAt: Date!
    name: String!
    nickname: String!
    studentId: String!
    loginDenied: Boolean!
    togetherFreeVideoTicketCount: Int!
    isCoach: Boolean!
  ): User!
  freeBoardCategoryUpdate(
    _id: MId!
    name: String
    adminDescription: String
  ): FreeBoardCategory!
  courseTagRelDelete(_id: MId!): CourseTagRel!
  courseTagDelete(_id: MId!): CourseTag!
  regularBoardCommentCreate(
    author: MId!
    post: MId!
    replyOf: MId
    content: String!
    adminDescription: String!
  ): RegularBoardComment!
  meetingRecordCreate(
    author: MId!
    customer: MId
    startsAt: String!
    content: String!
    adminDescription: String!
  ): MeetingRecord!
  reviewBoardPostDelete(_id: MId!): ReviewBoardPost!
  specialProductPurchaseLinkPay(
    link: MId!
    ticket: MId!
  ): SpecialProductPurchaseLink!
  coachScheduleDelete(_id: MId!): CoachSchedule!
  coursePackageCreate(
    description: String!
    category: MId!
    adminDescription: String!
    name: String!
    courses: [MId!]!
    brief: String!
    image: File!
    priceSales: Int!
    priceRegular: Int!
  ): CoursePackage!
  assignmentBoardPostUpdate(
    _id: MId!
    board: MId
    author: MId
    name: String
    content: String
    isImportant: Boolean
    adminDescription: String
  ): AssignmentBoardPost!
  assignmentBoardCommentCreate(
    author: MId!
    post: MId!
    replyOf: MId
    content: String!
    adminDescription: String!
  ): AssignmentBoardComment!
  assignmentBoardCreate(
    category: MId!
    name: String!
    content: String!
    adminDescription: String!
    lesson: MId
  ): AssignmentBoard!
  regularBoardMoveDown(_id: MId!, category: MId!): String
  userGroupUpdate(_id: MId!, name: String, adminDescription: String): UserGroup!
  courseDelete(_id: MId!): Course!
  togetherFreeVideoCreate(
    name: String!
    content: KollusVideo!
    adminDescription: String!
  ): TogetherFreeVideo!
  lectureCreate(
    description: String!
    adminDescription: String!
    capacity: Int!
    name: String!
    brief: String!
    image: File!
    priceSales: Int!
    period: Period!
    applicationEndsAt: Date!
    location: String!
    priceRegular: Int!
  ): Lecture!
  regularBoardDelete(_id: MId!): RegularBoard!
  userGroupDelete(_id: MId!): UserGroup!
  assignmentBoardCommentUpdate(
    _id: MId!
    author: MId
    post: MId
    replyOf: MId
    content: String
    adminDescription: String
  ): AssignmentBoardComment!
  specialProductPurchaseLinkCreate(
    specialProduct: MId!
    specialProductPurchase: MId!
    ticketCondition: TicketConditionInput!
    ticket: MId
    adminDescription: String!
  ): SpecialProductPurchaseLink!
  lectureApplicationDelete(_id: MId!): LectureApplication!
  adminScheduleDelete(_id: MId!): AdminSchedule!
  reviewBoardPostUpdate(
    _id: MId!
    board: MId
    author: MId
    name: String
    content: String
    isImportant: Boolean
    adminDescription: String
  ): ReviewBoardPost!
  togetherFreeVideoUpdate(
    _id: MId!
    name: String
    content: KollusVideo
    adminDescription: String
  ): TogetherFreeVideo!
  courseReviewDeleteBySelf(_id: MId!): CourseReview!
  assignmentBoardCategoryUpdate(
    _id: MId!
    name: String
    adminDescription: String
  ): AssignmentBoardCategory!
  adminScheduleUpdate(
    _id: MId!
    kind: MId
    period: Period
    content: String
    adminDescription: String
  ): AdminSchedule!
  freeBoardMoveUp(_id: MId!, category: MId!): String
  courseCategoryMoveDown(_id: MId!): String
  regularBoardPostCreate(
    board: MId!
    author: MId!
    name: String!
    content: String!
    isImportant: Boolean!
    adminDescription: String!
  ): RegularBoardPost!
  regularBoardCategoryDelete(_id: MId!): RegularBoardCategory!
  adminVerifyToken(token: String!): AdminAuth!
  referrerLinkUpdate(
    _id: MId!
    name: String!
    adminDescription: String!
  ): ReferrerLink!
  userBadgeRelDelete(_id: MId!): UserBadgeRel!
  coursePackageUpdate(
    description: String
    category: MId
    _id: MId!
    adminDescription: String
    name: String
    courses: [MId!]
    brief: String
    image: File
    priceSales: Int
    priceRegular: Int
  ): CoursePackage!
  freeVideoUpdate(
    _id: MId!
    name: String
    content: File
    adminDescription: String
  ): FreeVideo!
  inquiryKindUpdate(
    _id: MId!
    name: String
    adminDescription: String
  ): InquiryKind!
  popupMoveDown(_id: MId!): String
  freeBoardUpdate(
    _id: MId!
    category: MId
    name: String
    content: String
    adminDescription: String
    requiredBadges: [MId!]
  ): FreeBoard!
  userGetTogetherFreeVideoTicketForFree(user: MId!): String
  userLeave(id: MId!, reason: String!): String
  assignmentBoardCommentDelete(_id: MId!): AssignmentBoardComment!
  popupCreate(
    name: String!
    imagePc: File!
    imageMobile: File!
    url: String!
    adminDescription: String!
  ): Popup!
  freeBoardPostCreate(
    board: MId!
    author: MId!
    name: String!
    content: String!
    isImportant: Boolean!
    adminDescription: String!
  ): FreeBoardPost!
  courseOwnershipCreate(
    course: MId!
    user: MId!
    expiresAt: Date!
  ): CourseOwnership!
  regularBoardCommentUpdate(
    _id: MId!
    author: MId
    post: MId
    replyOf: MId
    content: String
    adminDescription: String
  ): RegularBoardComment!
  courseCategoryUpdate(
    _id: MId!
    name: String
    adminDescription: String
  ): CourseCategory!
  lectureApplicationPurchase(
    lecture: MId!
    user: MId!
    ticket: MId!
  ): LectureApplication!
  freeVideoDelete(_id: MId!): FreeVideo!
  freeBoardCommentDelete(_id: MId!): FreeBoardComment!
  badgeCreate(name: String!, color: String!): Badge!
  badgeUpdate(_id: MId!, name: String, color: String): Badge!
  togetherFreeVideoDelete(_id: MId!): TogetherFreeVideo!
  freeBoardDelete(_id: MId!): FreeBoard!
  coursePackagePurchase(package: MId!, user: MId!, ticket: MId!): String
  adminLogin(id: String!, password: String!): AdminAuth!
}
type SpecialProductPurchaseLinkEdge {
  node: SpecialProductPurchaseLink!
}
type BadgePage {
  edges: [BadgeEdge!]!
  count: Int!
}
type AssignmentBoardComment {
  _id: MId!
  createdAt: Date!
  author: User!
  post: AssignmentBoardPost!
  replyOf: AssignmentBoardComment
  content: String!
  adminDescription: String!
}
type RegularBoard {
  _id: MId!
  createdAt: Date!
  category: RegularBoardCategory!
  name: String!
  content: String!
  adminDescription: String!
  requiredBadges: [Badge!]!
}
type RegularBoardCategoryEdge {
  node: RegularBoardCategory!
}
type CourseReviewPage {
  edges: [CourseReviewEdge!]!
  count: Int!
}
type ReportTargetReviewBoardComment {
  comment: ReviewBoardComment!
  kind: ReportTargetKind
}
type InquiryPage {
  edges: [InquiryEdge!]!
  count: Int!
}
type CourseOwnershipEdge {
  node: CourseOwnership!
}
type CoursePackage {
  description: String!
  category: CoursePackageCategory!
  _id: MId!
  adminDescription: String!
  name: String!
  courses: [Course!]!
  createdAt: Date!
  brief: String!
  image: File!
  priceSales: Int!
  priceRegular: Int!
}
type FreeVideoEdge {
  node: FreeVideo!
}
type TicketReasonCourse {
  user: User!
  course: Course!
  kind: TicketReasonKind
}
type LectureApplicationEdge {
  node: LectureApplication!
}
type AssignmentBoardPostPage {
  edges: [AssignmentBoardPostEdge!]!
  count: Int!
}
type Report {
  _id: MId!
  createdAt: Date!
  author: User!
  target: ReportTarget!
  content: String!
  adminDescription: String!
  adminChecked: Boolean!
}
type FreeBoardEdge {
  node: FreeBoard!
}
type ReviewBoardCommentPage {
  edges: [ReviewBoardCommentEdge!]!
  count: Int!
}
type PopupPage {
  edges: [PopupEdge!]!
  count: Int!
}
type AnnouncementPage {
  edges: [AnnouncementEdge!]!
  count: Int!
}
type CoursePackageEdge {
  node: CoursePackage!
}
type BannerPage {
  edges: [BannerEdge!]!
  count: Int!
}
type CourseReview {
  _id: MId!
  createdAt: Date!
  author: User!
  course: Course!
  content: String!
  adminChecked: Boolean!
  adminDescription: String!
}
type ReportTargetFreeBoardPost {
  post: FreeBoardPost!
  kind: ReportTargetKind
}
type CourseTagRel {
  _id: MId!
  createdAt: Date!
  course: Course!
  tag: CourseTag!
}
type FreeBoardCommentEdge {
  node: FreeBoardComment!
}
type CourseOwnershipPage {
  edges: [CourseOwnershipEdge!]!
  count: Int!
}
type TicketCondition {
  method: TicketMethod!
  price: Int!
  installmentMonths: Int!
}
type UserLessonRelEdge {
  node: UserLessonRel!
}
type TicketReasonCoursePackage {
  user: User!
  coursePackage: CoursePackage!
  kind: TicketReasonKind
}
type CourseKind {
  _id: String!
  createdAt: Date!
  tags: [CourseTag!]!
  categories: [CourseCategory!]!
}
type CoachScheduleKind {
  _id: MId!
  createdAt: Date!
  name: String!
  adminDescription: String!
}
type SpecialProductPurchaseLinkPage {
  edges: [SpecialProductPurchaseLinkEdge!]!
  count: Int!
}
type UserLessonRel {
  _id: MId!
  createdAt: Date!
  user: User!
  lesson: Lesson!
  progress: Float!
  lastWatchedAt: Date
}
type AssignmentBoardMemberPage {
  edges: [AssignmentBoardMemberEdge!]!
  count: Int!
}
type LectureApplicationPage {
  edges: [LectureApplicationEdge!]!
  count: Int!
}
type ReportTargetCourseReview {
  courseReview: CourseReview!
  kind: ReportTargetKind
}
type CoachSchedule {
  _id: MId!
  createdAt: Date!
  kind: CoachScheduleKind!
  owner: User!
  customer: User
  period: Period!
  content: String!
  adminDescription: String!
}
type AdminScheduleKindEdge {
  node: AdminScheduleKind!
}
type CourseKindEdge {
  node: CourseKind!
}
type CoachScheduleEdge {
  node: CoachSchedule!
}
type AssignmentBoardCommentPage {
  edges: [AssignmentBoardCommentEdge!]!
  count: Int!
}
type RegularBoardPostPage {
  edges: [RegularBoardPostEdge!]!
  count: Int!
}
type ReviewBoardCategoryEdge {
  node: ReviewBoardCategory!
}
type AssignmentBoardEdge {
  node: AssignmentBoard!
}
type TogetherFreeVideoOwnershipEdge {
  node: TogetherFreeVideoOwnership!
}
type UserGroup {
  _id: MId!
  createdAt: Date!
  name: String!
  adminDescription: String!
}
type FaqCategory {
  _id: MId!
  createdAt: Date!
  name: String!
  items: [Faq!]!
  adminDescription: String!
}
type ReviewBoardPostPage {
  edges: [ReviewBoardPostEdge!]!
  count: Int!
}
type ReviewBoardCategory {
  _id: MId!
  createdAt: Date!
  name: String!
  boards: [ReviewBoard!]!
  adminDescription: String!
}
type FaqPage {
  edges: [FaqEdge!]!
  count: Int!
}
type AdminSchedule {
  _id: MId!
  createdAt: Date!
  kind: AdminScheduleKind!
  period: Period!
  content: String!
  adminDescription: String!
}
type AssignmentBoardMemberEdge {
  node: AssignmentBoardMember!
}
type ReportTargetRegularBoardPost {
  post: RegularBoardPost!
  kind: ReportTargetKind
}
type CourseReviewEdge {
  node: CourseReview!
}
type ReviewBoard {
  _id: MId!
  createdAt: Date!
  category: ReviewBoardCategory!
  name: String!
  content: String!
  adminDescription: String!
  requiredBadges: [Badge!]!
}
type LecturePage {
  edges: [LectureEdge!]!
  count: Int!
}
type UserTogetherFreeVideoRelEdge {
  node: UserTogetherFreeVideoRel!
}
type MeetingRecord {
  _id: MId!
  createdAt: Date!
  author: User!
  customer: User!
  startsAt: String!
  content: String!
  adminDescription: String!
}
type TogetherFreeVideoOwnership {
  _id: MId!
  createdAt: Date!
  user: User!
  togetherFreeVideo: TogetherFreeVideo!
  expiresAt: Date!
}
type UserGroupEdge {
  node: UserGroup!
}
type ReviewBoardPost {
  _id: MId!
  createdAt: Date!
  board: ReviewBoard!
  author: User!
  name: String!
  content: String!
  isImportant: Boolean!
  adminDescription: String!
}
type RegularBoardPostEdge {
  node: RegularBoardPost!
}
type MeetingRecordEdge {
  node: MeetingRecord!
}
type InquiryEdge {
  node: Inquiry!
}
type LectureEdge {
  node: Lecture!
}
type UserAuth {
  token: String!
  user: User!
}
type CourseKindPage {
  edges: [CourseKindEdge!]!
  count: Int!
}
type FreeBoardPostPage {
  edges: [FreeBoardPostEdge!]!
  count: Int!
}
type CoursePackageCategoryPage {
  edges: [CoursePackageCategoryEdge!]!
  count: Int!
}
type Ticket {
  tossPaymentKey: String
  _id: MId!
  adminDescription: String!
  tossPaymentValidationError: Unknown
  createdAt: Date!
  reason: TicketReason
  status: TicketStatus!
  condition: TicketCondition!
  user: User!
}
type ReviewBoardPostEdge {
  node: ReviewBoardPost!
}
type CourseCategory {
  _id: MId!
  createdAt: Date!
  kind: CourseKind!
  name: String!
  adminDescription: String!
}
type CourseEdge {
  node: Course!
}
type TogetherFreeVideoOwnershipPage {
  edges: [TogetherFreeVideoOwnershipEdge!]!
  count: Int!
}
type ReferrerLink {
  _id: MId!
  createdAt: Date!
  owner: User!
  name: String!
  url: String!
  adminDescription: String!
}
type User {
  _id: MId!
  adminDescription: String!
  email: String!
  referrerCode: String!
  typeOfBusiness: String!
  group: UserGroup
  phone: String!
  coachExpiresAt: Date!
  name: String!
  nickname: String!
  createdAt: Date!
  coach: User
  studentId: String!
  loginDenied: Boolean!
  togetherFreeVideoTicketCount: Int!
  isCoach: Boolean!
  coachChecked: Boolean!
}
type ReportTargetRegularBoardComment {
  comment: RegularBoardComment!
  kind: ReportTargetKind
}
type FreeBoardPost {
  _id: MId!
  createdAt: Date!
  board: FreeBoard!
  author: User!
  name: String!
  content: String!
  isImportant: Boolean!
  adminDescription: String!
}
type FaqEdge {
  node: Faq!
}
type TicketReasonLecture {
  user: User!
  lecture: Lecture!
  kind: TicketReasonKind
}
type InquiryKind {
  _id: MId!
  createdAt: Date!
  name: String!
  adminDescription: String!
}
type CourseCategoryEdge {
  node: CourseCategory!
}
type CourseTagRelEdge {
  node: CourseTagRel!
}
type AssignmentBoardPost {
  _id: MId!
  createdAt: Date!
  board: AssignmentBoard!
  author: User!
  name: String!
  content: String!
  isImportant: Boolean!
  adminDescription: String!
}
type CourseOwnership {
  _id: MId!
  createdAt: Date!
  user: User!
  course: Course!
  expiresAt: Date!
  adminDescription: String!
}
type RegularBoardCategory {
  _id: MId!
  createdAt: Date!
  name: String!
  boards: [RegularBoard!]!
  adminDescription: String!
}
type CoursePage {
  edges: [CourseEdge!]!
  count: Int!
}
type TicketReasonSpecialProduct {
  user: User!
  specialProduct: SpecialProduct!
  specialProductPurchase: SpecialProductPurchase!
  specialProductPurchaseLink: SpecialProductPurchaseLink!
  kind: TicketReasonKind
}
type BadgeEdge {
  node: Badge!
}
type Course {
  description: String!
  category: CourseCategory!
  tags: [CourseTag!]!
  _id: MId!
  adminDescription: String!
  name: String!
  attachments: [File!]!
  orientation: File
  createdAt: Date!
  brief: String!
  image: File!
  isHidden: Boolean!
  priceSales: Int!
  # lessons: [Lesson!]!
  priceRegular: Int!
}
type AssignmentBoardCategory {
  _id: MId!
  createdAt: Date!
  name: String!
  boards: [AssignmentBoard!]!
  adminDescription: String!
}
type BannerEdge {
  node: Banner!
}
type RegularBoardComment {
  _id: MId!
  createdAt: Date!
  author: User!
  post: RegularBoardPost!
  replyOf: RegularBoardComment
  content: String!
  adminDescription: String!
}
type TicketPage {
  edges: [TicketEdge!]!
  count: Int!
}
type AdminScheduleKindPage {
  edges: [AdminScheduleKindEdge!]!
  count: Int!
}
type CourseTagPage {
  edges: [CourseTagEdge!]!
  count: Int!
}
type TicketEdge {
  node: Ticket!
}
type SpecialProductPage {
  edges: [SpecialProductEdge!]!
  count: Int!
}
type AnnouncementEdge {
  node: Announcement!
}
type ReportTargetAssignmentBoardPost {
  post: AssignmentBoardPost!
  kind: ReportTargetKind
}
type ReportTargetAssignmentBoardComment {
  comment: AssignmentBoardComment!
  kind: ReportTargetKind
}
type FreeVideo {
  _id: MId!
  createdAt: Date!
  name: String!
  content: File!
  adminDescription: String!
}
type UserLessonRelPage {
  edges: [UserLessonRelEdge!]!
  count: Int!
}
type CoachSchedulePage {
  edges: [CoachScheduleEdge!]!
  count: Int!
}
type AssignmentBoardCommentEdge {
  node: AssignmentBoardComment!
}
type UserGroupPage {
  edges: [UserGroupEdge!]!
  count: Int!
}
type AdminScheduleEdge {
  node: AdminSchedule!
}
type Query {
  coursePackageReadMany(filter: Filter, sort: Sort): [CoursePackage!]!
  assignmentBoardPostReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AssignmentBoardPostPage!
  courseCategoryReadMany(filter: Filter, sort: Sort): [CourseCategory!]!
  freeBoardCommentReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): FreeBoardCommentPage!
  coursePackageCategoryReadOne(
    filter: Filter
    nullable: Boolean
  ): CoursePackageCategory
  regularBoardCategoryReadMany(
    filter: Filter
    sort: Sort
  ): [RegularBoardCategory!]!
  assignmentBoardPostReadOne(
    filter: Filter
    nullable: Boolean
  ): AssignmentBoardPost
  assignmentBoardPostReadMany(
    filter: Filter
    sort: Sort
  ): [AssignmentBoardPost!]!
  meetingRecordReadMany(filter: Filter, sort: Sort): [MeetingRecord!]!
  regularBoardPostReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): RegularBoardPostPage!
  coachScheduleKindReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CoachScheduleKindPage!
  specialProductReadOne(filter: Filter, nullable: Boolean): SpecialProduct
  freeBoardCategoryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): FreeBoardCategoryPage!
  lectureReadOne(filter: Filter, nullable: Boolean): Lecture
  courseReadOne(filter: Filter, nullable: Boolean): Course
  specialProductPurchaseLinkReadOne(
    filter: Filter
    nullable: Boolean
  ): SpecialProductPurchaseLink
  userReadPage(filter: Filter, sort: Sort, pageOptions: PageOptions!): UserPage!
  userBadgeRelReadOne(filter: Filter, nullable: Boolean): UserBadgeRel
  adminScheduleKindReadOne(filter: Filter, nullable: Boolean): AdminScheduleKind
  userGroupReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): UserGroupPage!
  announcementReadOne(filter: Filter, nullable: Boolean): Announcement
  courseOwnershipReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CourseOwnershipPage!
  userTogetherFreeVideoRelReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): UserTogetherFreeVideoRelPage!
  courseKindReadMany(filter: Filter, sort: Sort): [CourseKind!]!
  courseKindReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CourseKindPage!
  popupReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): PopupPage!
  lectureApplicationReadMany(filter: Filter, sort: Sort): [LectureApplication!]!
  regularBoardCommentReadOne(
    filter: Filter
    nullable: Boolean
  ): RegularBoardComment
  reportReadOne(filter: Filter, nullable: Boolean): Report
  adminScheduleReadOne(filter: Filter, nullable: Boolean): AdminSchedule
  lectureReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): LecturePage!
  popupReadMany(filter: Filter, sort: Sort): [Popup!]!
  regularBoardCommentReadMany(
    filter: Filter
    sort: Sort
  ): [RegularBoardComment!]!
  courseReviewReadMany(filter: Filter, sort: Sort): [CourseReview!]!
  regularBoardCategoryReadOne(
    filter: Filter
    nullable: Boolean
  ): RegularBoardCategory
  adminScheduleKindReadMany(filter: Filter, sort: Sort): [AdminScheduleKind!]!
  inquiryKindReadMany(filter: Filter, sort: Sort): [InquiryKind!]!
  specialProductPurchaseReadOne(
    filter: Filter
    nullable: Boolean
  ): SpecialProductPurchase
  freeVideoReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): FreeVideoPage!
  regularBoardCommentReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): RegularBoardCommentPage!
  freeBoardCategoryReadMany(filter: Filter, sort: Sort): [FreeBoardCategory!]!
  assignmentBoardCategoryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AssignmentBoardCategoryPage!
  togetherFreeVideoOwnershipReadOne(
    filter: Filter
    nullable: Boolean
  ): TogetherFreeVideoOwnership
  reviewBoardCategoryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): ReviewBoardCategoryPage!
  reviewBoardCommentReadOne(
    filter: Filter
    nullable: Boolean
  ): ReviewBoardComment
  freeBoardCommentReadMany(filter: Filter, sort: Sort): [FreeBoardComment!]!
  assignmentBoardReadMany(filter: Filter, sort: Sort): [AssignmentBoard!]!
  reportReadMany(filter: Filter, sort: Sort): [Report!]!
  assignmentBoardMemberReadOne(
    filter: Filter
    nullable: Boolean
  ): AssignmentBoardMember
  reviewBoardPostReadOne(filter: Filter, nullable: Boolean): ReviewBoardPost
  freeVideoReadMany(filter: Filter, sort: Sort): [FreeVideo!]!
  coachScheduleKindReadOne(filter: Filter, nullable: Boolean): CoachScheduleKind
  reviewBoardReadMany(filter: Filter, sort: Sort): [ReviewBoard!]!
  coachScheduleKindReadMany(filter: Filter, sort: Sort): [CoachScheduleKind!]!
  regularBoardReadMany(filter: Filter, sort: Sort): [RegularBoard!]!
  userGroupReadOne(filter: Filter, nullable: Boolean): UserGroup
  freeBoardCategoryReadOne(filter: Filter, nullable: Boolean): FreeBoardCategory
  assignmentBoardCategoryReadOne(
    filter: Filter
    nullable: Boolean
  ): AssignmentBoardCategory
  coursePackageReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CoursePackagePage!
  courseOwnershipReadMany(filter: Filter, sort: Sort): [CourseOwnership!]!
  bannerReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): BannerPage!
  userLessonRelReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): UserLessonRelPage!
  regularBoardReadOne(filter: Filter, nullable: Boolean): RegularBoard
  specialProductReadMany(filter: Filter, sort: Sort): [SpecialProduct!]!
  freeBoardReadOne(filter: Filter, nullable: Boolean): FreeBoard
  faqCategoryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): FaqCategoryPage!
  userGroupReadMany(filter: Filter, sort: Sort): [UserGroup!]!
  coachScheduleReadOne(filter: Filter, nullable: Boolean): CoachSchedule
  ticketReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): TicketPage!
  ticketReadMany(filter: Filter, sort: Sort): [Ticket!]!
  specialProductPurchaseReadMany(
    filter: Filter
    sort: Sort
  ): [SpecialProductPurchase!]!
  announcementReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AnnouncementPage!
  togetherFreeVideoReadOne(filter: Filter, nullable: Boolean): TogetherFreeVideo
  regularBoardCategoryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): RegularBoardCategoryPage!
  regularBoardReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): RegularBoardPage!
  courseTagReadMany(filter: Filter, sort: Sort): [CourseTag!]!
  bannerReadOne(filter: Filter, nullable: Boolean): Banner
  adminScheduleReadMany(filter: Filter, sort: Sort): [AdminSchedule!]!
  reviewBoardCommentReadMany(filter: Filter, sort: Sort): [ReviewBoardComment!]!
  freeBoardReadMany(filter: Filter, sort: Sort): [FreeBoard!]!
  userTogetherFreeVideoRelReadOne(
    filter: Filter
    nullable: Boolean
  ): UserTogetherFreeVideoRel
  lessonReadOne(filter: Filter, nullable: Boolean): Lesson
  freeBoardPostReadMany(filter: Filter, sort: Sort): [FreeBoardPost!]!
  freeBoardReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): FreeBoardPage!
  reviewBoardCategoryReadMany(
    filter: Filter
    sort: Sort
  ): [ReviewBoardCategory!]!
  courseCategoryReadOne(filter: Filter, nullable: Boolean): CourseCategory
  inquiryKindReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): InquiryKindPage!
  userBadgeRelReadMany(filter: Filter, sort: Sort): [UserBadgeRel!]!
  specialProductReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): SpecialProductPage!
  inquiryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): InquiryPage!
  userLessonRelReadOne(filter: Filter, nullable: Boolean): UserLessonRel
  assignmentBoardCommentReadOne(
    filter: Filter
    nullable: Boolean
  ): AssignmentBoardComment
  badgeReadOne(filter: Filter, nullable: Boolean): Badge
  reviewBoardCommentReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): ReviewBoardCommentPage!
  reviewBoardCategoryReadOne(
    filter: Filter
    nullable: Boolean
  ): ReviewBoardCategory
  courseCategoryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CourseCategoryPage!
  specialProductPurchaseLinkReadMany(
    filter: Filter
    sort: Sort
  ): [SpecialProductPurchaseLink!]!
  popupReadOne(filter: Filter, nullable: Boolean): Popup
  lectureApplicationReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): LectureApplicationPage!
  inquiryReadOne(filter: Filter, nullable: Boolean): Inquiry
  userReadOne(filter: Filter, nullable: Boolean): User
  reviewBoardPostReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): ReviewBoardPostPage!
  referrerLinkReadOne(filter: Filter, nullable: Boolean): ReferrerLink
  courseTagRelReadOne(filter: Filter, nullable: Boolean): CourseTagRel
  bannerReadMany(filter: Filter, sort: Sort): [Banner!]!
  specialProductPurchaseReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): SpecialProductPurchasePage!
  faqCategoryReadMany(filter: Filter, sort: Sort): [FaqCategory!]!
  assignmentBoardMemberReadMany(
    filter: Filter
    sort: Sort
  ): [AssignmentBoardMember!]!
  faqCategoryReadOne(filter: Filter, nullable: Boolean): FaqCategory
  freeBoardPostReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): FreeBoardPostPage!
  meetingRecordReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): MeetingRecordPage!
  faqReadPage(filter: Filter, sort: Sort, pageOptions: PageOptions!): FaqPage!
  lessonReadMany(filter: Filter, sort: Sort): [Lesson!]!
  userTogetherFreeVideoRelReadMany(
    filter: Filter
    sort: Sort
  ): [UserTogetherFreeVideoRel!]!
  faqReadOne(filter: Filter, nullable: Boolean): Faq
  courseTagReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CourseTagPage!
  courseOwnershipReadOne(filter: Filter, nullable: Boolean): CourseOwnership
  togetherFreeVideoReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): TogetherFreeVideoPage!
  courseTagRelReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CourseTagRelPage!
  courseReadMany(filter: Filter, sort: Sort): [Course!]!
  lessonReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): LessonPage!
  coursePackageReadOne(filter: Filter, nullable: Boolean): CoursePackage
  freeBoardCommentReadOne(filter: Filter, nullable: Boolean): FreeBoardComment
  ticketReadOne(filter: Filter, nullable: Boolean): Ticket
  coachScheduleReadMany(filter: Filter, sort: Sort): [CoachSchedule!]!
  courseTagRelReadMany(filter: Filter, sort: Sort): [CourseTagRel!]!
  lectureReadMany(filter: Filter, sort: Sort): [Lecture!]!
  togetherFreeVideoOwnershipReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): TogetherFreeVideoOwnershipPage!
  userReadMany(filter: Filter, sort: Sort): [User!]!
  courseTagReadOne(filter: Filter, nullable: Boolean): CourseTag
  inquiryKindReadOne(filter: Filter, nullable: Boolean): InquiryKind
  meetingRecordReadOne(filter: Filter, nullable: Boolean): MeetingRecord
  coachScheduleReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CoachSchedulePage!
  reviewBoardPostReadMany(filter: Filter, sort: Sort): [ReviewBoardPost!]!
  faqReadMany(filter: Filter, sort: Sort): [Faq!]!
  userBadgeRelReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): UserBadgeRelPage!
  specialProductPurchaseLinkReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): SpecialProductPurchaseLinkPage!
  assignmentBoardCategoryReadMany(
    filter: Filter
    sort: Sort
  ): [AssignmentBoardCategory!]!
  assignmentBoardReadOne(filter: Filter, nullable: Boolean): AssignmentBoard
  courseKindReadOne(filter: Filter, nullable: Boolean): CourseKind
  reviewBoardReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): ReviewBoardPage!
  courseReviewReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CourseReviewPage!
  togetherFreeVideoReadMany(filter: Filter, sort: Sort): [TogetherFreeVideo!]!
  courseReviewReadOne(filter: Filter, nullable: Boolean): CourseReview
  regularBoardPostReadOne(filter: Filter, nullable: Boolean): RegularBoardPost
  adminScheduleReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AdminSchedulePage!
  reviewBoardReadOne(filter: Filter, nullable: Boolean): ReviewBoard
  courseReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CoursePage!
  freeBoardPostReadOne(filter: Filter, nullable: Boolean): FreeBoardPost
  assignmentBoardCommentReadMany(
    filter: Filter
    sort: Sort
  ): [AssignmentBoardComment!]!
  referrerLinkReadMany(filter: Filter, sort: Sort): [ReferrerLink!]!
  userLessonRelReadMany(filter: Filter, sort: Sort): [UserLessonRel!]!
  lectureApplicationReadOne(
    filter: Filter
    nullable: Boolean
  ): LectureApplication
  reportReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): ReportPage!
  regularBoardPostReadMany(filter: Filter, sort: Sort): [RegularBoardPost!]!
  announcementReadMany(filter: Filter, sort: Sort): [Announcement!]!
  assignmentBoardCommentReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AssignmentBoardCommentPage!
  coursePackageCategoryReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): CoursePackageCategoryPage!
  referrerLinkReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): ReferrerLinkPage!
  assignmentBoardReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AssignmentBoardPage!
  inquiryReadMany(filter: Filter, sort: Sort): [Inquiry!]!
  freeVideoReadOne(filter: Filter, nullable: Boolean): FreeVideo
  adminScheduleKindReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AdminScheduleKindPage!
  assignmentBoardMemberReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): AssignmentBoardMemberPage!
  badgeReadPage(
    filter: Filter
    sort: Sort
    pageOptions: PageOptions!
  ): BadgePage!
  togetherFreeVideoOwnershipReadMany(
    filter: Filter
    sort: Sort
  ): [TogetherFreeVideoOwnership!]!
  badgeReadMany(filter: Filter, sort: Sort): [Badge!]!
  coursePackageCategoryReadMany(
    filter: Filter
    sort: Sort
  ): [CoursePackageCategory!]!
}
type FreeBoard {
  _id: MId!
  createdAt: Date!
  category: FreeBoardCategory!
  name: String!
  content: String!
  adminDescription: String!
  requiredBadges: [Badge!]!
}
type RegularBoardPage {
  edges: [RegularBoardEdge!]!
  count: Int!
}
type FreeBoardCommentPage {
  edges: [FreeBoardCommentEdge!]!
  count: Int!
}
type ReviewBoardCommentEdge {
  node: ReviewBoardComment!
}
type AssignmentBoard {
  _id: MId!
  createdAt: Date!
  category: AssignmentBoardCategory!
  name: String!
  content: String!
  adminDescription: String!
  lesson: Lesson
}
type UserPage {
  edges: [UserEdge!]!
  count: Int!
}
type Lecture {
  description: String!
  _id: MId!
  adminDescription: String!
  capacity: Int!
  name: String!
  createdAt: Date!
  brief: String!
  image: File!
  priceSales: Int!
  period: Period!
  applicationEndsAt: Date!
  location: String!
  priceRegular: Int!
}
type CourseTagEdge {
  node: CourseTag!
}
type FreeBoardCategoryPage {
  edges: [FreeBoardCategoryEdge!]!
  count: Int!
}
type RegularBoardEdge {
  node: RegularBoard!
}
type Popup {
  _id: MId!
  createdAt: Date!
  name: String!
  imagePc: File!
  imageMobile: File!
  url: String!
  adminDescription: String!
}
type UserBadgeRel {
  _id: MId!
  createdAt: Date!
  user: User!
  badge: Badge!
}
type SpecialProduct {
  _id: MId!
  createdAt: Date!
  name: String!
  priceSales: Int!
  isHidden: Boolean!
  adminDescription: String!
}
type LessonEdge {
  node: Lesson!
}
type CoursePackageCategory {
  _id: MId!
  createdAt: Date!
  name: String!
  adminDescription: String!
}
type MeetingRecordPage {
  edges: [MeetingRecordEdge!]!
  count: Int!
}
type CourseTag {
  _id: MId!
  createdAt: Date!
  kind: CourseKind!
  name: String!
  adminDescription: String!
}
type ReportTargetFreeBoardComment {
  comment: FreeBoardComment!
  kind: ReportTargetKind
}
type Announcement {
  _id: MId!
  createdAt: Date!
  name: String!
  content: String!
  adminDescription: String!
}
type ReportEdge {
  node: Report!
}
type RegularBoardCategoryPage {
  edges: [RegularBoardCategoryEdge!]!
  count: Int!
}
type AdminScheduleKind {
  _id: MId!
  createdAt: Date!
  name: String!
  adminDescription: String!
}
type RegularBoardCommentEdge {
  node: RegularBoardComment!
}
type UserBadgeRelPage {
  edges: [UserBadgeRelEdge!]!
  count: Int!
}
type CourseCategoryPage {
  edges: [CourseCategoryEdge!]!
  count: Int!
}
type LessonPage {
  edges: [LessonEdge!]!
  count: Int!
}
type CoachScheduleKindEdge {
  node: CoachScheduleKind!
}
type ReviewBoardCategoryPage {
  edges: [ReviewBoardCategoryEdge!]!
  count: Int!
}
type Faq {
  _id: MId!
  createdAt: Date!
  question: String!
  answer: String!
  adminDescription: String!
}
type UserTogetherFreeVideoRel {
  _id: MId!
  createdAt: Date!
  user: User!
  togetherFreeVideo: TogetherFreeVideo!
  progress: Float!
  lastWatchedAt: Date
}
type FreeBoardCategory {
  _id: MId!
  createdAt: Date!
  name: String!
  boards: [FreeBoard!]!
  adminDescription: String!
}
type AssignmentBoardCategoryEdge {
  node: AssignmentBoardCategory!
}
type ReportTargetReviewBoardPost {
  post: ReviewBoardPost!
  kind: ReportTargetKind
}
type UserEdge {
  node: User!
}
type SpecialProductPurchasePage {
  edges: [SpecialProductPurchaseEdge!]!
  count: Int!
}
type SpecialProductPurchaseEdge {
  node: SpecialProductPurchase!
}
type UserBadgeRelEdge {
  node: UserBadgeRel!
}
type ReviewBoardComment {
  _id: MId!
  createdAt: Date!
  author: User!
  post: ReviewBoardPost!
  replyOf: ReviewBoardComment
  content: String!
  adminDescription: String!
}
type CoursePackagePage {
  edges: [CoursePackageEdge!]!
  count: Int!
}
type RegularBoardPost {
  _id: MId!
  createdAt: Date!
  board: RegularBoard!
  author: User!
  name: String!
  content: String!
  isImportant: Boolean!
  adminDescription: String!
}
type CoachScheduleKindPage {
  edges: [CoachScheduleKindEdge!]!
  count: Int!
}
type FaqCategoryPage {
  edges: [FaqCategoryEdge!]!
  count: Int!
}
type FreeBoardPage {
  edges: [FreeBoardEdge!]!
  count: Int!
}
type CoursePackageCategoryEdge {
  node: CoursePackageCategory!
}
type ReviewBoardEdge {
  node: ReviewBoard!
}
type FreeBoardCategoryEdge {
  node: FreeBoardCategory!
}
type TogetherFreeVideo {
  _id: MId!
  createdAt: Date!
  name: String!
  content: KollusVideo!
  adminDescription: String!
}
input TicketConditionInput {
  method: TicketMethod!
  price: Int!
  installmentMonths: Int!
}
input PageOptions {
  skip: Int!
  limit: Int!
}
union TicketReason =
    TicketReasonCourse
  | TicketReasonCoursePackage
  | TicketReasonLecture
  | TicketReasonSpecialProduct
union ReportTarget =
    ReportTargetCourseReview
  | ReportTargetFreeBoardPost
  | ReportTargetFreeBoardComment
  | ReportTargetRegularBoardPost
  | ReportTargetRegularBoardComment
  | ReportTargetReviewBoardPost
  | ReportTargetReviewBoardComment
  | ReportTargetAssignmentBoardPost
  | ReportTargetAssignmentBoardComment
